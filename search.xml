<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[贪心]]></title>
    <url>%2F2019%2F02%2F15%2F%E8%B4%AA%E5%BF%83%2F</url>
    <content type="text"><![CDATA[硬币问题 12345678910111213141516171819#include&lt;iostream&gt;using namespace std;const int v[6] = &#123;1,5,10,50,100,500&#125;; //面值int main(int argc, char const *argv[]) &#123; int A; //支付A元 cin&gt;&gt;A; int C[6]; int ans = 0; for(int i=0;i&lt;6;i++)&#123; cin&gt;&gt;C[i]; &#125; for(int i=5;i&gt;=0;i--)&#123; int t = min(A/v[i],C[i]); A -= t*v[i]; ans += t; &#125; cout&lt;&lt;ans&lt;&lt;endl; return 0;&#125; 区间问题 区间调度]]></content>
      <categories>
        <category>poj</category>
      </categories>
      <tags>
        <tag>poj</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[情感分析]]></title>
    <url>%2F2019%2F02%2F13%2F%E6%83%85%E6%84%9F%E5%88%86%E6%9E%90%2F</url>
    <content type="text"><![CDATA[情感分析 情感分析（SA）又称为倾向性分析和意见挖掘，它是对带有情感色彩的主观性文本进行分析、处理、归纳和推理的过程，其中情感分析还可以细分为情感极性（倾向）分析，情感程度分析，主客观分析等。 情感分析的方法 基于情感词典的情感分析 以句子作为情感分析对象的粒度 基于机器学习的情感分析 基于朴素贝叶斯（Naïve Bayes, NB)的方法 基于最大熵(Maximumntropy, ME) 基于支持向量机(SVM)的方法 性能比较 情感词典 优点 能够体现文本的非结构化特征 更利于挖掘文本内在联系和所表达情感 缺点 依赖构建的情感词典 词语不规范 新词 变形词 机器学习 优点 将文本转化为结构化数据进行处理 语料库自动扩充 缺点 各特征都看做孤立元素 不能体现文本内在联系]]></content>
      <categories>
        <category>nlp</category>
      </categories>
      <tags>
        <tag>nlp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[poj_tips]]></title>
    <url>%2F2019%2F02%2F08%2Fpoj-tips%2F</url>
    <content type="text"><![CDATA[MathJax.Hub.Config({"HTML-CSS": { preferredFont: "TeX", availableFonts: ["STIX","TeX"], linebreaks: { automatic:true }, EqnChunk: (MathJax.Hub.Browser.isMobile ? 10 : 50) }, tex2jax: { inlineMath: [ ["$", "$"], ["\\(","\\)"] ], processEscapes: true, ignoreClass: "tex2jax_ignore|dno",skipTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']}, TeX: { noUndefined: { attributes: { mathcolor: "red", mathbackground: "#FFEEEE", mathsize: "90%" } }, Macros: { href: "{}" } }, messageStyle: "none" }); MathJax.Hub.Queue(function() { var all = MathJax.Hub.getAllJax(), i; for(i=0; i < all.length; i += 1) { all[i].SourceElement().parentNode.className += ' has-jax'; } }); 设置输出格式 1234567#include&lt;iostream&gt;#include&lt;iomanip&gt; //注意要加上这个头文件using namespace std;int main() &#123; cout&lt;&lt;fixed&lt;&lt;setprecision(2)&lt;&lt;'$'&lt;&lt;sum/12.0&lt;&lt;endl; return 0;&#125; std::代表标准库全局域 std::ios∷fixed代表全局域下有个类ios，ios类中有个常量fixed setprecision(n):设置小数精度为n位 使用 \(\pi\) 1234#include&lt;cmath&gt;#include&lt;iomanip&gt;double pi = 4*atan(1); //atan是反正切函数 memset()函数:给一块连续内存赋初始值 123//头文件:#inlcude&lt;cstring&gt;void *memset(void *ptr,int value,size_t num);//ptr指的是指向内存块的指针。value指的是内存块被设定的数值的大小。size_t num指的是内存块的大小。 getline()函数:可以读取空格，以回车作为结束字符 123456789#include&lt;iostream&gt;#include&lt;string&gt; //注意头文件using namespace std;main ()&#123;string str;getline(cin,str);cout&lt;&lt;str&lt;&lt;endl;&#125; Pay attention to: c++输入字符串中包含空格，不能用cin接收 c++比较两个字符串是否相等:strcmp(string s1,string s2)]]></content>
      <categories>
        <category>poj</category>
      </categories>
      <tags>
        <tag>poj</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[atom]]></title>
    <url>%2F2019%2F02%2F01%2Fatom%2F</url>
    <content type="text"><![CDATA[命令集合 ctrl + P: 快速开启档案]]></content>
      <tags>
        <tag>atom</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Latex 简介]]></title>
    <url>%2F2019%2F01%2F30%2FLatex%E7%AE%80%E4%BB%8B%2F</url>
    <content type="text"><![CDATA[123456789101112131415161718\thispagestyle&#123;empty&#125;%去掉本页页码\newpage % 另起一页\pagenumbering&#123;Roman&#125; % 从此页开始进入罗马编号\tableofcontents % 生成的目录表\listoffigures % 引入表格的目录\listoftables % 引入图表的目录\pagenumbering&#123;arabic&#125; % 从此页开始进入阿拉伯编号% 把文章放在新的latex文件里面\input&#123;part/part1&#125;\newpage %part文件下下part1.tex:通过这种方法来调用新的tex文件~~~~ % 显示空格 引入包 1234567891011121314151617181920\usepackage&#123;amsmath&#125; %数学字体\usepackage&#123;bm&#125;%此包与上一个包配合使用, 可用 \bm 命令同时加粗行中公式与单列公式\usepackage&#123;amsfonts&#125;%空心字母? 实测不可用\usepackage&#123;amssymb&#125;\usepackage&#123;cite&#125; % 引用文献\usepackage[CJKbookmarks]&#123;hyperref&#125;\usepackage&#123;graphicx&#125;%加载 jpg 图片\usepackage&#123;simplewick&#125;%使用缩并的包\linespread&#123;1.3&#125;%调整行间距\usepackage&#123;mathrsfs&#125;%花体\usepackage&#123;mathtools,slashed&#125;%费曼斜线\newcommand\hatslashed[1]&#123;&#123;\hat&#123;#1&#125;\mathllap&#123;\slashed&#123;#1&#125;&#125;&#125;&#125;%使费曼斜线与算符帽更紧凑的一个定义\usepackage&#123;centernot&#125;%斜线中央版本%不用任何包, 可写\not 命令(这个线偏左. 所以要\centernot). 但是, \not, \centernot, 以及 \slashed 三个命令, 还是最后一个最漂亮\usepackage&#123;fancy&#125;%页眉页脚包\pagestyle&#123;plain&#125;%页眉页脚设置\usepackage&#123;geometry&#125;%页边距包\geometry&#123;left=3.9cm,right=3.9cm,top=3.9cm,bottom=3.9cm&#125;%页边距参数 写公式 写公式的时候不可以出现空行 1234567\begin&#123;align&#125; % 公式对齐ds^2:=c^2dt^2-d\bm&#123;r&#125;^2 % \bm&#123;r&#125;： r为黑体\end&#123;align&#125;% 注意此时公式后面的编号是自动生成的，如果不想要后面的编号则改为：\begin&#123;align&#125; % 公式对齐ds^2:=c^2dt^2-d\bm&#123;r&#125;^2\nonumber\end&#123;align&#125; 1234\begin&#123;gather&#125; % gather:居中对齐x^\mu:=(x^0,x^i)=(x^0,x^1,x^2,x^3)=(ct,x,y,z)=(ct,\bm&#123;r&#125;),\\x_\mu:=(x^0,x_i)=(x_0,x_1,x_2,x_3)=(ct,-x,-y,-z)=(ct,-\bm&#123;r&#125;),\end&#123;gather&#125; 1548817070906 1234\begin&#123;align&#125; % 同时写几个公式&amp;X^&#123;y+z&#125;\nonumber \\% 上标 , &amp; 在哪就从哪开始对齐&amp;X_&#123;y+z&#125; % 下标\end&#123;align&#125; 1548817324498 引用公式 123456\begin&#123;align&#125;\label&#123;U1&#125;\phi\rightarrow\phi&apos;=e^&#123;iq\gamma&#125;\phi;\end&#123;align&#125;% 引用~(\ref&#123;U1&#125;) 1548817368522 角标 1\footnote 让括号变大 123\big( % :一般大\bigg\&#123; % :超级大\Bigg %:超超级大 12345\begin&#123;align&#125;&amp;\left[1 \right. \\ % 只有左边有括号，右边没有括号&amp;\overset&#123;7&#125;&#123;8&#125; \\&amp;\overset&#123;\leftrightarrow&#125;&#123;\theta&#125;\end&#123;align&#125; 1548817411070 12345678\begin&#123;align&#125;\left\&#123;\begin&#123;array&#125;&#123;cl&#125; %表明我要开始排列了，&#123;cl&#125;表示有两列，第一列要居中，第二列要左对齐a+b,~ &amp; b&gt;0 \\ % &amp;表示列与列a-b,~ &amp; b&lt;0 \end&#123;array&#125;\right.\end&#123;align&#125; 1548817442897 图片引用 123456\begin&#123;figure&#125;[!h] % !h的作用是让图片精确定位在你放的地方 \centering % Requires \usepackage&#123;graphicx&#125; \includegraphics[width=5.6cm]&#123;space.jpg&#125;\\ \caption&#123;间隔/空间区域的划分&#125;\label&#123;space&#125;\end&#123;figure&#125; 表格 123456789101112131415161718192021\documentclass[UTF8]&#123;ctexart&#125;\usepackage&#123;amsmath&#125;\usepackage&#123;graphicx&#125;\begin&#123;document&#125;\begin&#123;table&#125;[!h]\begin&#123;center&#125;\begin&#123;tabular&#125;&#123;|c|c|c|&#125; \hline 星期 &amp; 天气 &amp; 日期 \\ \hline 一&amp; 优秀&amp; 1.11 \\ \hline 二 &amp; 良好 &amp;1.12 \\ \hline 三 &amp;差&amp;1.13\\ \hline\end&#123;tabular&#125;\caption&#123;表格.&#125;\label&#123;biao1&#125;\end&#123;center&#125;\end&#123;table&#125;\end&#123;document&#125; 1548817479285 12\textrm % 变成正体字\quad % 空格 幻灯片 1234567\begin&#123;frame&#125;&#123;背景，问题&#125;% 幻灯片的名字\begin&#123;itemize&#125; % 编号\hilite&lt;1&gt;\item 惯性参考系 \pause % pause: 表明每一项都是单出的,一项一项出来，没出来的显示灰色\hilite&lt;2&gt;\item\end&#123;itemize&#125;\end&#123;frame&#125; 参考文献 12\begin&#123;thebibligraphy&#125;&#123;10&#125; \bibitem&#123;1&#125; 引用参考文献 123\include&#123;chapter/bib&#125; % bib:参考文献的名字\cite&#123;1&#125; % 在文中引入参考文献 中文 1234567\documentclass[UTF8]&#123;ctexart&#125; % 然后用pdflatex编译\begin&#123;document&#125;可以写中文！\end&#123;document&#125; 12345678$$\begin&#123;eqnarray&#125;\nabla\cdot\vec&#123;E&#125; &amp;=&amp; \frac&#123;\rho&#125;&#123;\epsilon_0&#125; \\\nabla\cdot\vec&#123;B&#125; &amp;=&amp; 0 \\\nabla\times\vec&#123;E&#125; &amp;=&amp; -\frac&#123;\partial B&#125;&#123;\partial t&#125; \\\nabla\times\vec&#123;B&#125; &amp;=&amp; \mu_0\left(\vec&#123;J&#125;+\epsilon_0\frac&#123;\partial E&#125;&#123;\partial t&#125; \right)\end&#123;eqnarray&#125;$$ ga $ a+b=c$ s]]></content>
      <categories>
        <category>latex</category>
      </categories>
      <tags>
        <tag>latex</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用python matplotlib画图]]></title>
    <url>%2F2019%2F01%2F23%2Fmatplotlib-1%2F</url>
    <content type="text"><![CDATA[欧舒丹你]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F01%2F23%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new "My New Post" More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
